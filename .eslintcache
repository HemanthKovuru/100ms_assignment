[{"E:\\breaking_brad\\src\\index.js":"1","E:\\breaking_brad\\src\\reportWebVitals.js":"2","E:\\breaking_brad\\src\\App.js":"3","E:\\breaking_brad\\src\\pages\\ListPage.js":"4","E:\\breaking_brad\\src\\pages\\SingleListPage.js":"5","E:\\breaking_brad\\src\\components\\ListCard.js":"6","E:\\breaking_brad\\src\\components\\Pagination.js":"7","E:\\breaking_brad\\src\\pages\\ErrorPage.js":"8"},{"size":568,"mtime":1608600534249,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":480,"mtime":1608962743539,"results":"12","hashOfConfig":"10"},{"size":3096,"mtime":1608969302469,"results":"13","hashOfConfig":"10"},{"size":2497,"mtime":1608648245067,"results":"14","hashOfConfig":"10"},{"size":943,"mtime":1608640766368,"results":"15","hashOfConfig":"10"},{"size":505,"mtime":1608628778820,"results":"16","hashOfConfig":"10"},{"size":119,"mtime":1608962700648,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1nrxcb",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\breaking_brad\\src\\index.js",[],["36","37"],"E:\\breaking_brad\\src\\reportWebVitals.js",[],"E:\\breaking_brad\\src\\App.js",[],"E:\\breaking_brad\\src\\pages\\ListPage.js",["38","39","40"],"E:\\breaking_brad\\src\\pages\\SingleListPage.js",["41"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./../scss/SingleListPage.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SingleListPage = (props) => {\r\n  // 1]. initilaize item data\r\n  const [item, setItem] = useState({});\r\n  const [quotes, setQuotes] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const base_url = \"https://www.breakingbadapi.com/api\";\r\n\r\n  // 2]. fetch function\r\n  const fetchItem = async () => {\r\n    setLoading(true);\r\n    const item = await axios.get(\r\n      `${base_url}/characters/${props.match.params.id}`\r\n    );\r\n\r\n    setItem(item.data[0]);\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchQuotes = async () => {\r\n    const quotes = await axios.get(\r\n      `${base_url}/quote?author=${props.match.params.name}`\r\n    );\r\n    console.log(quotes.data);\r\n    setQuotes(quotes.data);\r\n  };\r\n\r\n  // 3]. call use effect with fetchitem\r\n  useEffect(() => {\r\n    fetchItem();\r\n    fetchQuotes();\r\n  }, []);\r\n\r\n  if (!item) {\r\n    return <div>Loading</div>;\r\n  }\r\n\r\n  const { occupation, appearance } = item;\r\n\r\n  if (loading) {\r\n    return <div className='loading'>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Link className='btn' to='/'>\r\n        &larr; back to home\r\n      </Link>\r\n      <div className='container-item'>\r\n        <img className='img' src={item.img} alt={item.name} />\r\n        <div className='list-card rm-bs'>\r\n          <div>Character Name</div>\r\n          <div>{item.name}</div>\r\n          <div>Birthday</div>\r\n          <div>{item.birthday}</div>\r\n          <div>Occupation</div>\r\n          <div>\r\n            {occupation &&\r\n              occupation.map((occ) => {\r\n                return <div>{occ},</div>;\r\n              })}\r\n          </div>\r\n          <div>Status</div>\r\n          <div>{item.status === \"Deceased\" ? \"Dead\" : \"Alive\"}</div>\r\n          <div>Nickname</div>\r\n          <div>{item.nickname}</div>\r\n          <div>Actor Name</div>\r\n          <div>{item.portrayed}</div>\r\n          <div>{appearance}</div>\r\n          <div>{appearance && appearance.map((i) => <span>{i}, </span>)}</div>\r\n        </div>\r\n      </div>\r\n      {quotes.length > 0 && (\r\n        <div className='quotes'>\r\n          <h2>Quotes</h2>\r\n          {quotes.map((q) => (\r\n            <div className='quote' key={q.quote_id}>\r\n              {q.quote}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleListPage;\r\n","E:\\breaking_brad\\src\\components\\ListCard.js",[],"E:\\breaking_brad\\src\\components\\Pagination.js",[],"E:\\breaking_brad\\src\\pages\\ErrorPage.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":6,"column":10,"nodeType":"48","messageId":"49","endLine":6,"endColumn":18},{"ruleId":"46","severity":1,"message":"50","line":13,"column":19,"nodeType":"48","messageId":"49","endLine":13,"endColumn":29},{"ruleId":"51","severity":1,"message":"52","line":47,"column":45,"nodeType":"53","messageId":"54","endLine":47,"endColumn":47},{"ruleId":"55","severity":1,"message":"56","line":36,"column":6,"nodeType":"57","endLine":36,"endColumn":8,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'setPerPage' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchItem' and 'fetchQuotes'. Either include them or remove the dependency array.","ArrayExpression",["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [fetchItem, fetchQuotes]",{"range":"64","text":"65"},[991,993],"[fetchItem, fetchQuotes]"]