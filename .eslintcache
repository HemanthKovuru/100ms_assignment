[{"E:\\breaking_brad\\src\\index.js":"1","E:\\breaking_brad\\src\\reportWebVitals.js":"2","E:\\breaking_brad\\src\\App.js":"3","E:\\breaking_brad\\src\\pages\\ListPage.js":"4","E:\\breaking_brad\\src\\pages\\SingleListPage.js":"5","E:\\breaking_brad\\src\\components\\ListCard.js":"6","E:\\breaking_brad\\src\\components\\Pagination.js":"7"},{"size":568,"mtime":1608600534249,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":385,"mtime":1608634906995,"results":"11","hashOfConfig":"9"},{"size":2581,"mtime":1608642665891,"results":"12","hashOfConfig":"9"},{"size":2492,"mtime":1608642853997,"results":"13","hashOfConfig":"9"},{"size":943,"mtime":1608640766368,"results":"14","hashOfConfig":"9"},{"size":505,"mtime":1608628778820,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"w01aql",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\breaking_brad\\src\\index.js",[],["33","34"],"E:\\breaking_brad\\src\\reportWebVitals.js",[],"E:\\breaking_brad\\src\\App.js",[],"E:\\breaking_brad\\src\\pages\\ListPage.js",["35","36"],"import React, { useState, useEffect } from \"react\";\r\nimport ListCard from \"../components/ListCard\";\r\nimport axios from \"axios\";\r\nimport \"./../scss/ListPage.scss\";\r\nimport Pagination from \"../components/Pagination\";\r\n\r\nconst ListPage = () => {\r\n  // 1]. initialize data\r\n  const [list, setList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [curPage, setCurPage] = useState(1);\r\n  const [perPage, setPerPage] = useState(10);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  // 2]. fetch results\r\n  const fetchList = async () => {\r\n    setLoading(true);\r\n    const items = await axios.get(\r\n      `https://www.breakingbadapi.com/api/characters`\r\n    );\r\n    setList(items.data);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchList();\r\n  }, []);\r\n\r\n  // 3]. implement search and category functionality\r\n\r\n  // 3.1]. search\r\n  let filterItems = [...list];\r\n  if (list && list.length > 0) {\r\n    filterItems = filterItems.filter((item) => {\r\n      let name = item.name.toLowerCase();\r\n      if (name.includes(query)) return item;\r\n    });\r\n  }\r\n\r\n  // 3.2]. category\r\n  if (category) {\r\n    filterItems = filterItems.filter((item) => item.category === category);\r\n  }\r\n\r\n  // 4]. implement pagination\r\n  const indexOfLastItem = curPage * perPage;\r\n  const indexOfFirstItem = indexOfLastItem - perPage;\r\n\r\n  const curList = filterItems.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const paginate = (num) => {\r\n    setCurPage(num);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className='loading'>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className='home'>\r\n      <div className='search-box'>\r\n        <select onChange={(evt) => setCategory(evt.target.value)} id='category'>\r\n          <option value='' selected>\r\n            select by category\r\n          </option>\r\n          <option value='Breaking Bad'>Breaking Bad</option>\r\n          <option value='Better Call Saul'>Better Call Saul</option>\r\n        </select>\r\n        <input\r\n          className='search'\r\n          type='text'\r\n          placeholder='search for your favourite actor'\r\n          value={query}\r\n          onChange={(evt) => setQuery(evt.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className='list-box'>\r\n        {curList.length > 0 &&\r\n          curList.map((item) => <ListCard key={item.char_id} item={item} />)}\r\n      </div>\r\n      <Pagination\r\n        perPage={perPage}\r\n        totalitems={filterItems.length}\r\n        paginate={paginate}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListPage;\r\n","E:\\breaking_brad\\src\\pages\\SingleListPage.js",["37"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./../scss/SingleListPage.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SingleListPage = (props) => {\r\n  // 1]. initilaize item data\r\n  const [item, setItem] = useState({});\r\n  const [quotes, setQuotes] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const base_url = \"https://www.breakingbadapi.com/api\";\r\n\r\n  // 2]. fetch function\r\n  const fetchItem = async () => {\r\n    setLoading(true);\r\n    const item = await axios.get(\r\n      `${base_url}/characters/${props.match.params.id}`\r\n    );\r\n\r\n    setItem(item.data[0]);\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchQuotes = async () => {\r\n    const quotes = await axios.get(\r\n      `${base_url}/quote?author=${props.match.params.name}`\r\n    );\r\n    console.log(quotes.data);\r\n    setQuotes(quotes.data);\r\n  };\r\n\r\n  // 3]. call use effect with fetchitem\r\n  useEffect(() => {\r\n    fetchItem();\r\n    fetchQuotes();\r\n  }, []);\r\n\r\n  if (!item) {\r\n    return <div>Loading</div>;\r\n  }\r\n\r\n  const { occupation, appearance } = item;\r\n\r\n  if (loading) {\r\n    return <div className='loading'>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Link className='btn' to='/'>\r\n        &larr; back to home\r\n      </Link>\r\n      <div className='container-item'>\r\n        <img className='img' src={item.img} alt={item.name} />\r\n        <div className='list-card rm-bs'>\r\n          <div>Character Name</div>\r\n          <div>{item.name}</div>\r\n          <div>Birthday</div>\r\n          <div>{item.birthday}</div>\r\n          <div>Occupation</div>\r\n          <div>\r\n            {occupation &&\r\n              occupation.map((occ) => {\r\n                return <div>{occ},</div>;\r\n              })}\r\n          </div>\r\n          <div>Status</div>\r\n          <div>{item.status === \"Deceased\" ? \"Dead\" : \"Alive\"}</div>\r\n          <div>Nickname</div>\r\n          <div>{item.nickname}</div>\r\n          <div>Actor Name</div>\r\n          <div>{item.portrayed}</div>\r\n          <div>Seasons</div>\r\n          <div>{appearance && appearance.map((i) => <span>{i}, </span>)}</div>\r\n        </div>\r\n      </div>\r\n      {quotes.length > 0 && (\r\n        <div className='quotes'>\r\n          <h2>Quotes</h2>\r\n          {quotes.map((q) => (\r\n            <div className='quote' key={q.quote_id}>\r\n              {q.quote}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleListPage;\r\n","E:\\breaking_brad\\src\\components\\ListCard.js",[],"E:\\breaking_brad\\src\\components\\Pagination.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":12,"column":19,"nodeType":"44","messageId":"45","endLine":12,"endColumn":29},{"ruleId":"46","severity":1,"message":"47","line":35,"column":45,"nodeType":"48","messageId":"49","endLine":35,"endColumn":47},{"ruleId":"50","severity":1,"message":"51","line":36,"column":6,"nodeType":"52","endLine":36,"endColumn":8,"suggestions":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'setPerPage' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchItem' and 'fetchQuotes'. Either include them or remove the dependency array.","ArrayExpression",["56"],"no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [fetchItem, fetchQuotes]",{"range":"59","text":"60"},[991,993],"[fetchItem, fetchQuotes]"]